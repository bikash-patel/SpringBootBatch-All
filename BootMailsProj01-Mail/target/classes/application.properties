spring.application.name=BootMailsProj01-Mail

# SMTP Server configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=springboot121@gmail.com
spring.mail.password=zwcudorczhcslcnh

# SMTP Security configuration
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000



#spring.mail.properties.mail.smtp.auth=true
#
#Enables SMTP authentication.
#It tells the email server that the client must authenticate (provide valid username and password) before it can send emails.
#Why it's used: Ensures that only authorized users can send emails via the configured SMTP server.
#spring.mail.properties.mail.smtp.starttls.enable=true
#
#Enables STARTTLS support.
#STARTTLS is a way to upgrade a plain text connection to an encrypted connection using TLS/SSL.
#Why it's used: Ensures secure communication between the application and the SMTP server, protecting the email data in transit.
#spring.mail.properties.mail.smtp.starttls.required=true
#
#Makes STARTTLS mandatory for communication with the SMTP server.
#If the server does not support STARTTLS, the connection will fail.
#Why it's used: Enforces a secure connection by requiring encryption and prevents the use of insecure plain text communication.
#spring.mail.properties.mail.smtp.connectiontimeout=5000
#
#Sets the connection timeout in milliseconds.
#Defines the maximum time (in milliseconds) the application will wait to establish a connection with the SMTP server.
#Why it's used: Prevents the application from hanging indefinitely when the SMTP server is unresponsive or unreachable.
#spring.mail.properties.mail.smtp.timeout=5000
#
#Sets the timeout in milliseconds for reading responses from the SMTP server.
#Specifies how long the application should wait for the server to respond after sending a command.
#Why it's used: Ensures timely responses from the server and avoids delays caused by network or server issues.
#spring.mail.properties.mail.smtp.writetimeout=5000
#
#Sets the timeout in milliseconds for sending (writing) data to the SMTP server.
#Specifies the maximum time the application will wait when transmitting data (such as the email content) to the server.
#Why it's used: Avoids delays or hangs in scenarios where the server is slow or unable to process requests.
#
